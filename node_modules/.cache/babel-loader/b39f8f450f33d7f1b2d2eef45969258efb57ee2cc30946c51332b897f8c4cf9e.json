{"ast":null,"code":"import React,{createContext,useContext,useEffect,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext(undefined);export function useAuth(){const context=useContext(AuthContext);if(context===undefined){throw new Error(\"useAuth must be used within an AuthProvider\");}return context;}export function AuthProvider(_ref){let{children}=_ref;const[currentUser,setCurrentUser]=useState(null);const[userData,setUserData]=useState(null);const[loading,setLoading]=useState(true);// Mock implementation for now - will integrate with Firebase later\nconst signup=async(email,password,name)=>{// Mock user creation\nconsole.log(\"Signup:\",{email,password,name});const mockUser={id:Date.now().toString(),email,name,createdAt:new Date(),lastLoginAt:new Date(),streak:0,totalConceptsLearned:0};setUserData(mockUser);};const login=async(email,password)=>{// Mock login\nconsole.log(\"Login:\",{email,password});const mockUser={id:\"1\",email,name:\"Hyun Kim\",createdAt:new Date(),lastLoginAt:new Date(),streak:7,totalConceptsLearned:13,currentGoal:{id:\"1\",userId:\"1\",title:\"Understand core ML concepts to confidently contribute to AI product decisions\",description:\"Master machine learning fundamentals\",targetDate:new Date(Date.now()+30*24*60*60*1000),createdAt:new Date(),status:\"active\",progress:65,lessonPlans:[],milestones:[{id:\"1\",title:\"Fundamentals\",description:\"Learn ML basics\",completed:true,completedAt:new Date(),order:1},{id:\"2\",title:\"Core Concepts\",description:\"Understanding algorithms\",completed:false,order:2},{id:\"3\",title:\"Practical Applications\",description:\"Apply knowledge\",completed:false,order:3}]}};setUserData(mockUser);};const logout=async()=>{setCurrentUser(null);setUserData(null);};const resetPassword=async email=>{console.log(\"Reset password for:\",email);};useEffect(()=>{// Mock loading\nconst timer=setTimeout(()=>{setLoading(false);},1000);return()=>clearTimeout(timer);},[]);const value={currentUser,userData,loading,signup,login,logout,resetPassword};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:!loading&&children});}","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsx","_jsx","AuthContext","undefined","useAuth","context","Error","AuthProvider","_ref","children","currentUser","setCurrentUser","userData","setUserData","loading","setLoading","signup","email","password","name","console","log","mockUser","id","Date","now","toString","createdAt","lastLoginAt","streak","totalConceptsLearned","login","currentGoal","userId","title","description","targetDate","status","progress","lessonPlans","milestones","completed","completedAt","order","logout","resetPassword","timer","setTimeout","clearTimeout","value","Provider"],"sources":["/Users/ronak/Downloads/Know-Flow/Know-Flow/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { User as FirebaseUser } from \"firebase/auth\";\nimport { User } from \"../types\";\n\ninterface AuthContextType {\n  currentUser: FirebaseUser | null;\n  userData: User | null;\n  loading: boolean;\n  signup: (email: string, password: string, name: string) => Promise<void>;\n  login: (email: string, password: string) => Promise<void>;\n  logout: () => Promise<void>;\n  resetPassword: (email: string) => Promise<void>;\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error(\"useAuth must be used within an AuthProvider\");\n  }\n  return context;\n}\n\ninterface AuthProviderProps {\n  children: React.ReactNode;\n}\n\nexport function AuthProvider({ children }: AuthProviderProps) {\n  const [currentUser, setCurrentUser] = useState<FirebaseUser | null>(null);\n  const [userData, setUserData] = useState<User | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  // Mock implementation for now - will integrate with Firebase later\n  const signup = async (email: string, password: string, name: string) => {\n    // Mock user creation\n    console.log(\"Signup:\", { email, password, name });\n    const mockUser = {\n      id: Date.now().toString(),\n      email,\n      name,\n      createdAt: new Date(),\n      lastLoginAt: new Date(),\n      streak: 0,\n      totalConceptsLearned: 0,\n    };\n    setUserData(mockUser);\n  };\n\n  const login = async (email: string, password: string) => {\n    // Mock login\n    console.log(\"Login:\", { email, password });\n    const mockUser = {\n      id: \"1\",\n      email,\n      name: \"Hyun Kim\",\n      createdAt: new Date(),\n      lastLoginAt: new Date(),\n      streak: 7,\n      totalConceptsLearned: 13,\n      currentGoal: {\n        id: \"1\",\n        userId: \"1\",\n        title:\n          \"Understand core ML concepts to confidently contribute to AI product decisions\",\n        description: \"Master machine learning fundamentals\",\n        targetDate: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000),\n        createdAt: new Date(),\n        status: \"active\" as const,\n        progress: 65,\n        lessonPlans: [],\n        milestones: [\n          {\n            id: \"1\",\n            title: \"Fundamentals\",\n            description: \"Learn ML basics\",\n            completed: true,\n            completedAt: new Date(),\n            order: 1,\n          },\n          {\n            id: \"2\",\n            title: \"Core Concepts\",\n            description: \"Understanding algorithms\",\n            completed: false,\n            order: 2,\n          },\n          {\n            id: \"3\",\n            title: \"Practical Applications\",\n            description: \"Apply knowledge\",\n            completed: false,\n            order: 3,\n          },\n        ],\n      },\n    };\n    setUserData(mockUser);\n  };\n\n  const logout = async () => {\n    setCurrentUser(null);\n    setUserData(null);\n  };\n\n  const resetPassword = async (email: string) => {\n    console.log(\"Reset password for:\", email);\n  };\n\n  useEffect(() => {\n    // Mock loading\n    const timer = setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n\n    return () => clearTimeout(timer);\n  }, []);\n\n  const value = {\n    currentUser,\n    userData,\n    loading,\n    signup,\n    login,\n    logout,\n    resetPassword,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {!loading && children}\n    </AuthContext.Provider>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}